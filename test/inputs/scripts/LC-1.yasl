
/*
 * Taken from: https://leetcode.com/problems/find-the-longest-substring-containing-vowels-in-even-counts/
 *
 * Given the string s, return the size of the longest substring containing each vowel an even number of times. That
 * is, 'a', 'e', 'i', 'o', and 'u' must appear an even number of times.
 */

fn f(const s) {
    let max = -1;
    const flags = {
        .a: 1 << 0,
        .e: 1 << 1,
        .i: 1 << 2,
        .o: 1 << 3,
        .u: 1 << 4 }
    const indices = { 0: -1 }
    let state = 0
    for let i = 0; i < len s; i += 1 {
        const char = s[i]
        const at = flags[char]
        if at {
            state ^= at
        }
        const leftmost = indices[state]
        if leftmost {
            max = math.max(max, i - leftmost)
        } else {
            indices[state] = i
        }
    }
    return max
}


echo f('eleetminicoworoep')
echo f('leetcodeisgreat')
echo f('bcbcbc')
